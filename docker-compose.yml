version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: unified-analytics-api
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    depends_on:
      - postgres
      - redis
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${PORT:-3000}
      DB_HOST: postgres
      DB_PORT: ${DB_PORT:-5432}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT:-6379}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CALLBACK_URL: ${GOOGLE_CALLBACK_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_TIME: ${JWT_EXPIRATION_TIME}
      API_KEY_DEFAULT_EXPIRATION_DAYS: ${API_KEY_DEFAULT_EXPIRATION_DAYS}
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    working_dir: /usr/src/app
    command: npm run start:dev
    networks:
      - analytics-network

  postgres:
    image: postgres:15-alpine
    container_name: analytics-postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - analytics-network

  redis:
    image: redis:7-alpine
    container_name: analytics-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - analytics-network

volumes:
  postgres_data:
  redis_data:

networks:
  analytics-network:
    driver: bridge
